package ctrmap.util.tools.ovl;

import rpm.util.AutoRelGenerator;
import rpm.elfconv.ELF2RPM;
import rpm.elfconv.ExternalSymbolDB;
import rpm.format.rpm.RPM;
import xstandard.fs.FSFile;
import xstandard.fs.accessors.DiskFile;
import xstandard.gui.DialogUtils;
import xstandard.gui.file.XFileDialog;
import xstandard.gui.file.CommonExtensionFilters;
import java.io.File;
import javax.swing.DefaultListModel;

public class MultiElfToRpmDialog extends javax.swing.JDialog {

	private DefaultListModel<FSFile> files = new DefaultListModel<>();
	private ExternalSymbolDB esdb;

	public MultiElfToRpmDialog(java.awt.Frame parent, boolean modal, ExternalSymbolDB esdb) {
		super(parent, modal);
		initComponents();

		files = new DefaultListModel<>();
		this.esdb = esdb;
		
		fileList.setModel(files);
		
		setLocationRelativeTo(parent);
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        listSP = new javax.swing.JScrollPane();
        fileList = new javax.swing.JList<>();
        btnAdd = new javax.swing.JButton();
        btnRemove = new javax.swing.JButton();
        btnConvert = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("MultiRPM Converter");

        listSP.setViewportView(fileList);

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnRemove.setText("Remove");
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        btnConvert.setText("Convert");
        btnConvert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConvertActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(listSP, javax.swing.GroupLayout.DEFAULT_SIZE, 516, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAdd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRemove)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnConvert)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(listSP, javax.swing.GroupLayout.DEFAULT_SIZE, 182, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnRemove)
                    .addComponent(btnConvert))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
		FSFile f = XFileDialog.openFileDialog(CommonExtensionFilters.ELF, RPM.EXTENSION_FILTER);

		if (f != null) {
			for (int i = 0; i < files.getSize(); i++) {
				FSFile f2 = files.elementAt(i);
				if (f2.equals(f)){
					DialogUtils.showInfoMessage(this, "Pointless operation", "This file has already been queued.");
					return;
				}
			}
			
			files.addElement(f);
		}
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
		if (fileList.getSelectedIndex() != -1) {
			files.remove(fileList.getSelectedIndex());
		}
    }//GEN-LAST:event_btnRemoveActionPerformed

    private void btnConvertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConvertActionPerformed
		if (files.getSize() == 0) {
			DialogUtils.showInfoMessage(this, "Nothing to do", "No input files have been given.");
		} else {
			FSFile target = XFileDialog.openSaveFileDialog("Select a destination RPM file", RPM.EXTENSION_FILTER);

			if (target != null) {
				try {
					RPM rpm = new RPM();

					for (int i = 0; i < files.getSize(); i++) {
						FSFile f = files.elementAt(i);
						System.out.println("Merging RPM " + f);
						if (RPM.isRPM(f)) {
							rpm.merge(new RPM(f));
						} else {
							rpm.merge(ELF2RPM.getRPM(f, esdb));
						}
					}
					AutoRelGenerator.makeHooksAuto(rpm, esdb);
					
					target.setBytes(rpm.getBytesForBaseOfs(0, false));
				} catch (Exception e) {
					e.printStackTrace();
					DialogUtils.showExceptionTraceDialog(e);
				}

				dispose();
			}
		}
    }//GEN-LAST:event_btnConvertActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnConvert;
    private javax.swing.JButton btnRemove;
    private javax.swing.JList<FSFile> fileList;
    private javax.swing.JScrollPane listSP;
    // End of variables declaration//GEN-END:variables
}
