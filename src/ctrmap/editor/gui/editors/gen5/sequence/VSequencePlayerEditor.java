package ctrmap.editor.gui.editors.gen5.sequence;

import ctrmap.editor.gui.editors.common.AbstractToolbarEditor;
import ctrmap.editor.gui.editors.common.tools.AbstractTool;
import ctrmap.formats.common.GameInfo;
import ctrmap.formats.pokemon.gen5.sequence.SeqReader;
import ctrmap.formats.pokemon.gen5.sequence.Sequence;
import ctrmap.formats.pokemon.gen5.sequence.rel.RelocatableSequence;
import ctrmap.missioncontrol_base.debug.IMCDebugger;
import ctrmap.missioncontrol_ntr.fs.NTRGameFS;
import ctrmap.missioncontrol_ntr.sequence.VSequenceController;
import ctrmap.missioncontrol_ntr.sequence.VSequencePlaybackDebugger;
import ctrmap.missioncontrol_ntr.sequence.player.SequencePlayer;
import java.util.Arrays;
import java.util.Collection;
import java.util.List;
import xstandard.formats.yaml.Yaml;
import xstandard.fs.FSFile;
import xstandard.gui.DialogUtils;
import xstandard.gui.file.XFileDialog;

public class VSequencePlayerEditor extends javax.swing.JPanel implements AbstractToolbarEditor, VSequencePlaybackDebugger {

	private final VSequenceEditor seqEditor;
	private final VSequenceTool tool;

	private VSequenceController controller;

	private Sequence currentSeq;

	private SeqReader gameSequences;

	public VSequencePlayerEditor(VSequenceEditor seqEditor) {
		initComponents();
		this.seqEditor = seqEditor;
		tool = new VSequenceTool(this);
		updateStateText();
	}

	private void updateStateText() {
		String text;
		if (currentSeq == null) {
			text = "No file loaded";
		} else {
			text = "Loaded sequence " + currentSeq.seqId;
		}
		loadedFileState.setText(text);
	}
	
	private void resetFrameText() {
		curFrameText.setText("-");
	}

	/**
	 * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this
	 * code. The content of this method is always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        seqFilePanel = new javax.swing.JPanel();
        btnLoadFile = new javax.swing.JButton();
        btnSaveFile = new javax.swing.JButton();
        btnLoadFromGame = new javax.swing.JButton();
        seqIdSpinner = new javax.swing.JSpinner();
        seqIdLabel = new javax.swing.JLabel();
        statusPanel = new javax.swing.JPanel();
        loadedFileState = new javax.swing.JLabel();
        frameLabel = new javax.swing.JLabel();
        curFrameText = new javax.swing.JLabel();
        controlsPanel = new javax.swing.JPanel();
        btnTogglePlayback = new javax.swing.JButton();
        seqUserParam = new javax.swing.JSpinner();
        seqUserParamLabel = new javax.swing.JLabel();

        seqFilePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Sequence file"));

        btnLoadFile.setText("Load from disk");
        btnLoadFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoadFileActionPerformed(evt);
            }
        });

        btnSaveFile.setText("Save to disk");
        btnSaveFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveFileActionPerformed(evt);
            }
        });

        btnLoadFromGame.setText("Load from game data");
        btnLoadFromGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoadFromGameActionPerformed(evt);
            }
        });

        seqIdSpinner.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        seqIdLabel.setText("with sequence ID");

        javax.swing.GroupLayout seqFilePanelLayout = new javax.swing.GroupLayout(seqFilePanel);
        seqFilePanel.setLayout(seqFilePanelLayout);
        seqFilePanelLayout.setHorizontalGroup(
            seqFilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(seqFilePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(seqFilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnLoadFile)
                    .addComponent(btnSaveFile)
                    .addGroup(seqFilePanelLayout.createSequentialGroup()
                        .addComponent(btnLoadFromGame)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(seqIdLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(seqIdSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        seqFilePanelLayout.setVerticalGroup(
            seqFilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(seqFilePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnLoadFile)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(seqFilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLoadFromGame)
                    .addComponent(seqIdSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(seqIdLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSaveFile)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        statusPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Status"));

        loadedFileState.setText("-");

        frameLabel.setText("Frame:");

        curFrameText.setText("-");

        javax.swing.GroupLayout statusPanelLayout = new javax.swing.GroupLayout(statusPanel);
        statusPanel.setLayout(statusPanelLayout);
        statusPanelLayout.setHorizontalGroup(
            statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statusPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(loadedFileState)
                    .addGroup(statusPanelLayout.createSequentialGroup()
                        .addComponent(frameLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(curFrameText)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        statusPanelLayout.setVerticalGroup(
            statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statusPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(loadedFileState)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(frameLabel)
                    .addComponent(curFrameText))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        controlsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Controls"));

        btnTogglePlayback.setText("Play/pause");
        btnTogglePlayback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTogglePlaybackActionPerformed(evt);
            }
        });

        seqUserParam.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        seqUserParamLabel.setText("User parameter:");

        javax.swing.GroupLayout controlsPanelLayout = new javax.swing.GroupLayout(controlsPanel);
        controlsPanel.setLayout(controlsPanelLayout);
        controlsPanelLayout.setHorizontalGroup(
            controlsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(controlsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnTogglePlayback)
                .addGap(18, 18, 18)
                .addComponent(seqUserParamLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(seqUserParam, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(62, Short.MAX_VALUE))
        );
        controlsPanelLayout.setVerticalGroup(
            controlsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(controlsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(controlsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnTogglePlayback)
                    .addComponent(seqUserParam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(seqUserParamLabel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(controlsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(statusPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(seqFilePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(seqFilePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(statusPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(controlsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnLoadFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoadFileActionPerformed
		FSFile input = XFileDialog.openFileDialog(RelocatableSequence.EXTENSION_FILTER, Yaml.EXTENSION_FILTER);
		if (input == null) {
			return;
		}
		Sequence seq;
		if (RelocatableSequence.checkMagic(input)) {
			seq = new RelocatableSequence(input);
		} else {
			seq = new Sequence(new Yaml(input));
		}
		currentSeq = seq;
		updateStateText();
		resetFrameText();
    }//GEN-LAST:event_btnLoadFileActionPerformed

    private void btnSaveFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveFileActionPerformed
		if (currentSeq == null) {
			return;
		}

		FSFile outFile = XFileDialog.openSaveFileDialog(null, String.valueOf(currentSeq.seqId), RelocatableSequence.EXTENSION_FILTER, Yaml.EXTENSION_FILTER);
		if (outFile == null) {
			return;
		}

		if (RelocatableSequence.EXTENSION_FILTER.accepts(outFile.getName())) {
			currentSeq.toRelocatable().writeToFile(outFile);
		} else {
			currentSeq.getYML().writeToFile(outFile);
		}
    }//GEN-LAST:event_btnSaveFileActionPerformed

    private void btnTogglePlaybackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTogglePlaybackActionPerformed
		if (controller == null) {
			return;
		}

		SequencePlayer player = controller.getCurrentPlayer();
		if (player != null && player.getSequence() == currentSeq && !player.isEnded()) {
			player.setPaused(!player.isPaused());
			return;
		}

		if (controller != null) {
			controller.playSequence(currentSeq, ((Number) seqUserParam.getValue()).intValue());
		}
    }//GEN-LAST:event_btnTogglePlaybackActionPerformed

    private void btnLoadFromGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoadFromGameActionPerformed
		if (seqEditor.getGameInfo().getSubGame() != GameInfo.SubGame.W2) {
			DialogUtils.showErrorMessage("Unsupported game", "Loading sequences from game data is only supported on Pokémon White 2.");
			return;
		}

		if (gameSequences == null) {
			NTRGameFS fs = seqEditor.getMC().fs;
			FSFile overlay = fs.getDecompressedOverlayMaybeRO(293);
			gameSequences = new SeqReader(overlay, fs.getOvlLoadAddr(293), 0x21A6ECC, 27);
		}

		int seqId = ((Number) seqIdSpinner.getValue()).intValue();
		if (seqId >= 0 && seqId < gameSequences.sequences.size()) {
			currentSeq = gameSequences.sequences.get(seqId);
			seqEditor.getSequence().stopSequence();
			updateStateText();
			resetFrameText();
		} else {
			DialogUtils.showErrorMessage("Invalid value", "Sequence ID " + seqId + " is out of range, game contains " + gameSequences.sequences.size() + " sequences.");
		}
    }//GEN-LAST:event_btnLoadFromGameActionPerformed

	@Override
	public List<AbstractTool> getTools() {
		return Arrays.asList(tool);
	}

	@Override
	public Collection<? extends IMCDebugger> getExtraDebuggers() {
		return Arrays.asList(this);
	}

	@Override
	public void attach(VSequenceController ctrl) {
		this.controller = ctrl;
	}

	@Override
	public void onSeqPlaybackStarted(SequencePlayer player) {
		seqEditor.dcc.setDebugCameraEnabled(false);
		onPlaybackAdvance(player);
	}

	@Override
	public void onPlaybackAdvance(SequencePlayer player) {
		curFrameText.setText((int) player.getFrame() + "/" + (int) player.getFrameCount());
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLoadFile;
    private javax.swing.JButton btnLoadFromGame;
    private javax.swing.JButton btnSaveFile;
    private javax.swing.JButton btnTogglePlayback;
    private javax.swing.JPanel controlsPanel;
    private javax.swing.JLabel curFrameText;
    private javax.swing.JLabel frameLabel;
    private javax.swing.JLabel loadedFileState;
    private javax.swing.JPanel seqFilePanel;
    private javax.swing.JLabel seqIdLabel;
    private javax.swing.JSpinner seqIdSpinner;
    private javax.swing.JSpinner seqUserParam;
    private javax.swing.JLabel seqUserParamLabel;
    private javax.swing.JPanel statusPanel;
    // End of variables declaration//GEN-END:variables
}
